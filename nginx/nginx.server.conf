events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Configuration des logs
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;
    
    # Configuration de base
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;
    
    # Configuration gzip
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Upstream pour l'API Dashboard (port interne 8000)
    upstream api_dashboard {
        server api-dashboard-service:8000;
    }
    
    # Upstream pour NiFi (port interne 8080)
    upstream nifi {
        server nifi-service:8080;
    }
    
    # Upstream pour Grafana (port interne 3000)
    upstream grafana {
        server grafana:3000;
    }
    
    # Upstream pour Prometheus (port interne 9090)
    upstream prometheus {
        server prometheus:9090;
    }
    
    # Serveur principal - Accessible via IP publique ou nom de domaine
    server {
        listen 80;
        server_name _;  # Accepte toutes les requ√™tes (pas d'IP fixe)
        
        # Headers de s√©curit√©
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
        
        # Page d'accueil avec redirection vers le dashboard
        location = / {
            return 301 /dashboard/;
        }
        
        # Proxy vers l'API Dashboard (accessible sur port 80)
        location /dashboard/ {
            proxy_pass http://api_dashboard/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # API endpoints (accessibles sur port 80)
        location /api/ {
            proxy_pass http://api_dashboard;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Alerts (accessibles sur port 80)
        location /alerts/ {
            proxy_pass http://api_dashboard;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # NiFi (accessible sur port 80)
        location /nifi/ {
            proxy_pass http://nifi;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
        
        # Grafana (accessible sur port 80)
        location /grafana/ {
            proxy_pass http://grafana/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Prometheus (accessible sur port 80)
        location /prometheus/ {
            proxy_pass http://prometheus/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Health check
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Statut Nginx
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 172.20.0.0/16;  # R√©seau Docker
            deny all;
        }
        
        # Page d'information pour le d√©ploiement serveur
        location /info {
            return 200 '
<!DOCTYPE html>
<html>
<head>
    <title>SaaS Data Platform - Serveur</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 40px; }
        .container { max-width: 800px; margin: 0 auto; }
        .service { margin: 20px 0; padding: 15px; border: 1px solid #ddd; border-radius: 5px; }
        .port { color: #007cba; font-weight: bold; }
        .status { color: #28a745; }
    </style>
</head>
<body>
    <div class="container">
        <h1>üöÄ SaaS Data Platform - Serveur</h1>
        <p class="status">‚úÖ Plateforme d√©ploy√©e avec succ√®s !</p>
        
        <h2>üìã Services Disponibles</h2>
        
        <div class="service">
            <h3>üåê Dashboard Principal</h3>
            <p><strong>URL:</strong> <a href="/dashboard/">http://[IP_SERVEUR]/dashboard/</a></p>
            <p><strong>Port direct:</strong> <span class="port">10000</span></p>
            <p>Interface web principale et API</p>
        </div>
        
        <div class="service">
            <h3>üìä NiFi - Ingestion de Donn√©es</h3>
            <p><strong>URL:</strong> <a href="/nifi/">http://[IP_SERVEUR]/nifi/</a></p>
            <p><strong>Port direct:</strong> <span class="port">10080</span></p>
            <p>Interface d''ingestion et routage des donn√©es</p>
        </div>
        
        <div class="service">
            <h3>üîß Services de Traitement</h3>
            <p><strong>DBT Service:</strong> Port <span class="port">10001</span></p>
            <p><strong>R√©conciliation:</strong> Port <span class="port">10002</span></p>
            <p><strong>Contr√¥le Qualit√©:</strong> Port <span class="port">10003</span></p>
            <p><strong>Analyse RCA:</strong> Port <span class="port">10004</span></p>
        </div>
        
        <div class="service">
            <h3>üíæ Base de Donn√©es</h3>
            <p><strong>PostgreSQL:</strong> Port <span class="port">10543</span></p>
            <p><strong>Redis Cache:</strong> Port <span class="port">10637</span></p>
        </div>
        
        <div class="service">
            <h3>üìà Monitoring</h3>
            <p><strong>Grafana:</strong> <a href="/grafana/">http://[IP_SERVEUR]/grafana/</a> (admin/admin)</p>
            <p><strong>Prometheus:</strong> <a href="/prometheus/">http://[IP_SERVEUR]/prometheus/</a></p>
            <p><strong>Grafana direct:</strong> Port <span class="port">10300</span></p>
            <p><strong>Prometheus direct:</strong> Port <span class="port">10090</span></p>
        </div>
        
        <div class="service">
            <h3>üîó Acc√®s Direct par Port</h3>
            <p>Si vous pr√©f√©rez acc√©der directement aux services :</p>
            <ul>
                <li>Dashboard: <span class="port">http://[IP_SERVEUR]:10000</span></li>
                <li>NiFi: <span class="port">http://[IP_SERVEUR]:10080</span></li>
                <li>Grafana: <span class="port">http://[IP_SERVEUR]:10300</span></li>
                <li>Prometheus: <span class="port">http://[IP_SERVEUR]:10090</span></li>
            </ul>
        </div>
        
        <div class="service">
            <h3>üîß Commandes Utiles</h3>
            <p><strong>Voir les logs:</strong> docker-compose -f docker-compose.server.yml logs -f</p>
            <p><strong>Red√©marrer:</strong> docker-compose -f docker-compose.server.yml restart</p>
            <p><strong>Arr√™ter:</strong> docker-compose -f docker-compose.server.yml down</p>
            <p><strong>Statut:</strong> docker-compose -f docker-compose.server.yml ps</p>
        </div>
    </div>
</body>
</html>';
            add_header Content-Type text/html;
        }
    }
    
    # Configuration HTTPS (optionnel - n√©cessite des certificats SSL)
    # server {
    #     listen 443 ssl http2;
    #     server_name _;
    #     
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #     ssl_session_timeout 1d;
    #     ssl_session_cache shared:SSL:50m;
    #     ssl_session_tickets off;
    #     
    #     # Configuration SSL moderne
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;
    #     
    #     # Headers de s√©curit√©
    #     add_header Strict-Transport-Security "max-age=63072000" always;
    #     add_header X-Frame-Options "SAMEORIGIN" always;
    #     add_header X-XSS-Protection "1; mode=block" always;
    #     add_header X-Content-Type-Options "nosniff" always;
    #     add_header Referrer-Policy "no-referrer-when-downgrade" always;
    #     add_header Content-Security-Policy "default-src ''self'' http: https: data: blob: ''unsafe-inline''" always;
    #     
    #     # M√™me configuration que le serveur HTTP
    #     location / {
    #         proxy_pass http://api_dashboard;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #     }
    # }
}

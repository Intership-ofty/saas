# Script PowerShell d'initialisation des topics Kafka en mode KRaft
# Ce script configure les topics n√©cessaires pour le SaaS Data Platform

param(
    [string]$KafkaBootstrapServer = "localhost:9092",
    [int]$WaitTime = 30
)

Write-Host "üöÄ Initialisation des topics Kafka en mode KRaft..." -ForegroundColor Green
Write-Host "üì° Serveur Kafka: $KafkaBootstrapServer" -ForegroundColor Cyan

# Attendre que Kafka soit pr√™t
Write-Host "‚è≥ Attente que Kafka soit pr√™t (${WaitTime}s)..." -ForegroundColor Yellow
Start-Sleep -Seconds $WaitTime

# Fonction pour cr√©er un topic s'il n'existe pas
function Create-TopicIfNotExists {
    param(
        [string]$TopicName,
        [int]$Partitions = 3,
        [int]$ReplicationFactor = 1
    )
    
    Write-Host "üîç V√©rification du topic: $TopicName" -ForegroundColor Cyan
    
    try {
        $existingTopics = docker exec kafka kafka-topics --bootstrap-server $KafkaBootstrapServer --list 2>$null
        if ($existingTopics -contains $TopicName) {
            Write-Host "‚úÖ Topic '$TopicName' existe d√©j√†" -ForegroundColor Green
        } else {
            Write-Host "üìù Cr√©ation du topic: $TopicName (partitions: $Partitions, replication: $ReplicationFactor)" -ForegroundColor Yellow
            docker exec kafka kafka-topics --bootstrap-server $KafkaBootstrapServer --create --topic $TopicName --partitions $Partitions --replication-factor $ReplicationFactor --if-not-exists
            Write-Host "‚úÖ Topic '$TopicName' cr√©√© avec succ√®s" -ForegroundColor Green
        }
    } catch {
        Write-Host "‚ùå Erreur lors de la cr√©ation du topic '$TopicName': $($_.Exception.Message)" -ForegroundColor Red
    }
}

# Cr√©er les topics principaux
Write-Host "üìã Cr√©ation des topics principaux..." -ForegroundColor Green

# Topics pour les √©v√©nements CDR (Call Detail Records)
Create-TopicIfNotExists "cdr-events" 3 1
Create-TopicIfNotExists "cdr-raw" 3 1
Create-TopicIfNotExists "cdr-processed" 3 1

# Topics pour les alertes et notifications
Create-TopicIfNotExists "alerts" 3 1
Create-TopicIfNotExists "notifications" 3 1

# Topics pour les m√©triques et monitoring
Create-TopicIfNotExists "metrics" 3 1
Create-TopicIfNotExists "health-checks" 3 1

# Topics pour les donn√©es de qualit√©
Create-TopicIfNotExists "quality-events" 3 1
Create-TopicIfNotExists "data-quality-reports" 3 1

# Topics pour la r√©conciliation
Create-TopicIfNotExists "reconciliation-events" 3 1
Create-TopicIfNotExists "matching-results" 3 1

# Topics pour l'analyse des causes racines
Create-TopicIfNotExists "rca-events" 3 1
Create-TopicIfNotExists "anomaly-detection" 3 1

# Topics pour DBT et transformations
Create-TopicIfNotExists "dbt-events" 3 1
Create-TopicIfNotExists "transformation-status" 3 1

# Topics pour les logs et audit
Create-TopicIfNotExists "audit-logs" 3 1
Create-TopicIfNotExists "system-logs" 3 1

# Topics pour les donn√©es de test
Create-TopicIfNotExists "test-events" 1 1

Write-Host ""
Write-Host "üìä Liste des topics cr√©√©s:" -ForegroundColor Green
try {
    docker exec kafka kafka-topics --bootstrap-server $KafkaBootstrapServer --list
} catch {
    Write-Host "‚ùå Erreur lors de la r√©cup√©ration de la liste des topics" -ForegroundColor Red
}

Write-Host ""
Write-Host "‚úÖ Initialisation des topics Kafka termin√©e avec succ√®s!" -ForegroundColor Green
Write-Host ""
Write-Host "üîß Commandes utiles:" -ForegroundColor Cyan
Write-Host "  - Lister les topics: docker exec kafka kafka-topics --bootstrap-server $KafkaBootstrapServer --list"
Write-Host "  - D√©crire un topic: docker exec kafka kafka-topics --bootstrap-server $KafkaBootstrapServer --describe --topic <topic-name>"
Write-Host "  - Consommer un topic: docker exec kafka kafka-console-consumer --bootstrap-server $KafkaBootstrapServer --topic <topic-name> --from-beginning"
Write-Host "  - Produire vers un topic: docker exec kafka kafka-console-producer --bootstrap-server $KafkaBootstrapServer --topic <topic-name>"
